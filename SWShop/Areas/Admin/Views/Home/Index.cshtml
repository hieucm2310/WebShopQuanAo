@model HomeAdminVM

<div class="content-wrapper">
    <div class="row">
        <div class="col-md-4 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Transaction History</h4>
                    <canvas id="transaction-history" class="transaction-chart"></canvas>
                    <div class="bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3">
                        <div class="text-md-center text-xl-left">
                            <h6 class="mb-1">Transfer to VNPay</h6>
                            
                        </div>
                        <div class="align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0">
                            <h6 class="font-weight-bold mb-0">@Model.VNPay.ToString("N0", new System.Globalization.CultureInfo("en-US"))₫</h6>
                        </div>
                    </div>
                    <div class="bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3">
                        <div class="text-md-center text-xl-left">
                            <h6 class="mb-1">Tranfer to COD</h6>
                            
                        </div>
                        <div class="align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0">
                            <h6 class="font-weight-bold mb-0">@Model.COD.ToString("N0", new System.Globalization.CultureInfo("en-US"))₫</h6>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex flex-row justify-content-between">
                        <h4 class="card-title">Comments</h4>
                        <p class="text-muted mb-1 small">View all</p>
                    </div>
                    <div class="preview-list">
                        @foreach (var rate in Model.RateList)
                        {
                            <div class="preview-item border-bottom">
                                <div class="preview-thumbnail">
                                    <img src="~/images/huan.jpg" alt="image" class="rounded-circle" />
                                </div>
                                <div class="preview-item-content d-flex flex-grow">
                                    <div class="flex-grow">
                                        <div class="d-flex d-md-block d-xl-flex justify-content-between">
                                            <h6 class="preview-subject">@rate.ApplicationUser.Name</h6>
                                            <p class="text-muted text-small">@rate.TimeRate</p>
                                        </div>
                                        <p class="text-muted">@rate.Comment<p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 col-xl-4 grid-margin stretch-card">
        </div>
        <div class="col-md-6 col-xl-4 grid-margin stretch-card">
        </div>
        <div class="col-md-12 col-xl-4 grid-margin stretch-card">
        </div>
    </div>
</div>

@section Scripts{
    <script>
        setTimeout(() => {
            if ($("#transaction-history").length) {
                var areaData = {
                    labels: ["VNPay", "COD"],
                    datasets: [{
                        data: [@(Model.VNPayP), @(Model.CODP)],
                        backgroundColor: [
                            "#007bff", // blue color
                            "#fd7e14"  // orange color
                        ]
                    }
                    ]
                };

                var areaOptions = {
                    responsive: true,
                    maintainAspectRatio: true,
                    segmentShowStroke: false,
                    cutoutPercentage: 70,
                    elements: {
                        arc: {
                            borderWidth: 0
                        }
                    },
                    legend: {
                        display: false
                    },
                    tooltips: {
                        enabled: true
                    }
                }

                var transactionhistoryChartPlugins = {
                    beforeDraw: function (chart) {
                        var width = chart.chart.width,
                            height = chart.chart.height,
                            ctx = chart.chart.ctx;

                        ctx.restore();
                        var fontSize = 1;
                        ctx.font = fontSize + "rem sans-serif";
                        ctx.textAlign = 'left';
                        ctx.textBaseline = "middle";
                        ctx.fillStyle = "#ffffff";

                        var text = "@Model.Total.ToString("N0", new System.Globalization.CultureInfo("en-US"))₫",
                            textX = Math.round((width - ctx.measureText(text).width) / 2),
                            textY = height / 2.4;

                        ctx.fillText(text, textX, textY);

                        ctx.restore();
                        var fontSize = 0.75;
                        ctx.font = fontSize + "rem sans-serif";
                        ctx.textAlign = 'left';
                        ctx.textBaseline = "middle";
                        ctx.fillStyle = "#6c7293";

                        var texts = "    Tổng",
                            textsX = Math.round((width - ctx.measureText(text).width) / 1.93),
                            textsY = height / 1.7;

                        ctx.fillText(texts, textsX, textsY);
                        ctx.save();
                    }
                }

                var transactionhistoryChartCanvas = $("#transaction-history").get(0).getContext("2d");
                var transactionhistoryChart = new Chart(transactionhistoryChartCanvas, {
                    type: 'doughnut',
                    data: areaData,
                    options: areaOptions,
                    plugins: transactionhistoryChartPlugins
                });
            }
        }, 100);
    </script>
}
